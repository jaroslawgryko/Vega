// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Vega.Persistence;

namespace Vega.Migrations
{
    [DbContext(typeof(VegaDbContext))]
    [Migration("20180219222038_AddPhoto")]
    partial class AddPhoto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vega.Core.Models.Atrybut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Atrybuty");
                });

            modelBuilder.Entity("Vega.Core.Models.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Marki");
                });

            modelBuilder.Entity("Vega.Core.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MarkaId");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("Modele");
                });

            modelBuilder.Entity("Vega.Core.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("PojazdId");

                    b.HasKey("Id");

                    b.HasIndex("PojazdId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Vega.Core.Models.Pojazd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CzyZarejestrowany");

                    b.Property<string>("KontaktEmail")
                        .HasMaxLength(255);

                    b.Property<string>("KontaktNazwa")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("KontaktTelefon")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("ModelId");

                    b.Property<DateTime>("OstatniaZmiana");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Pojazdy");
                });

            modelBuilder.Entity("Vega.Core.Models.PojazdAtrybut", b =>
                {
                    b.Property<int>("PojazdId");

                    b.Property<int>("AtrybutId");

                    b.HasKey("PojazdId", "AtrybutId");

                    b.HasIndex("AtrybutId");

                    b.ToTable("PojazdAtrybuty");
                });

            modelBuilder.Entity("Vega.Core.Models.Model", b =>
                {
                    b.HasOne("Vega.Core.Models.Marka", "Marka")
                        .WithMany("Modele")
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vega.Core.Models.Photo", b =>
                {
                    b.HasOne("Vega.Core.Models.Pojazd")
                        .WithMany("Photos")
                        .HasForeignKey("PojazdId");
                });

            modelBuilder.Entity("Vega.Core.Models.Pojazd", b =>
                {
                    b.HasOne("Vega.Core.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vega.Core.Models.PojazdAtrybut", b =>
                {
                    b.HasOne("Vega.Core.Models.Atrybut", "Atrybut")
                        .WithMany()
                        .HasForeignKey("AtrybutId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vega.Core.Models.Pojazd", "Pojazd")
                        .WithMany("Atrybuty")
                        .HasForeignKey("PojazdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
